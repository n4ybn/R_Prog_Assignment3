setwd("C:/downloads/Coursera/R-Programming/R_Prog_Assignment3")
library("sqldf", lib.loc="~/R/win-library/3.2")
rc <- setwd("C:/downloads/Coursera/R-Programming/R_Prog_Assignment3")
library(data.table)
library("sqldf")
outcome <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
View(outcome)
View(outcome)
outcome <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
View(outcome)
states.col              <- 7
hospitals.col           <- 2
HA.col                  <- 11
HF.col                  <- 17
PN.col                  <- 23
states.contents         <- outcome[,states.col]
hospitals.contents      <- outcome[,hospitals.col]
HA.contents             <- as.numeric(outcome[,HA.col])
HF.contents             <- as.numeric(outcome[,HF.col])
PN.contents             <- as.numeric(outcome[,PN.col])
i <- "AL"
i.hospital <- outcome[,outcome[,hospitals.col]==i]
(outcome[,hospitals.col])==i
i <- "AL"
i.state <- outcome[,(outcome[,states.col])==i]
(outcome[,states.col])==i
i.states <- outcome[,(outcome[,states.col])==i]
i.states <- outcome[(outcome[,states.col])==i]
outcome[](outcome[,states.col])==i
outcome[((outcome[,states.col])==i)]
i.states <- outcome[((outcome[,states.col])==i),]
View(i.states)
i.states <- outcome[((outcome[,states.col])==i),]
library("sqldf")
outcome <- read.csv("outcome-of-care-measures.csv",colClasses = "character",skip=1)
View(outcome)
outcome <- read.csv("outcome-of-care-measures.csv",colClasses = "character",skip=1,header=FALSE)
View(outcome)
HA.ranked <- sqldf("select V2,V7,V11 from outcomes order by V11,V2")
HA.ranked <- sqldf("select V2,V7,V11 from outcome order by V11,V2")
View(HA.ranked)
HA.ranked <- sqldf("select V2,V7,V11 from outcome where V7==i order by V11,V2")
HA.ranked <- sqldf("select V2,V7,V11 from outcome where V7=="i"" order by V11,V2")
HA.ranked <- sqldf("select V2,V7,V11 from outcome where V7=="i" order by V11,V2")
HA.ranked <- sqldf("select V2,V7,V11 from outcome where V7=="i" order by V11,V2")
select.str <- paste0("select V2,V7,V11 from outcome where V7==",i," order by V11,V2")
HA.ranked <- sqldf(select.str)
select.str <- paste0("select V2,V7,V11 from outcome where V7=='",i,"' order by V11,V2")
HA.ranked <- sqldf(select.str)
View(HA.ranked)
HA.ranked[14,]
HA.ranked[14,c(V2,V11)]
HA.ranked[14,c("V2","V11")]
select.str <- paste0("select V2,V7,V11 from outcome where V7=='",i,"' order by V11,V2")
HA.ranked <- sqldf(select.str)
HA.ranked[14,c("V2","V11")]
HA.ranked[14,c("V2","V11")]
i <- "AL"
num<-10
select.str <- paste0("select V2,V7 from outcome where V7=='",i,"' and rownum==",num," order by V11,V2")
HA.ranked <- sqldf(select.str)
View(HA.ranked)
select.str <- paste0("select V2,V7 from outcome where V7=='",i,"' order by V11,V2")
HA.ranked <- sqldf(select.str)
i <- "AL"
num<-10
select.str <- paste0("select V2,V7 from outcome where V7=='",i,"' order by V11,V2")
HA.ranked <- sqldf(select.str)
## Set column names
HA.ranked  <- setNames(results.colnames)
HA.ranked[num,c("hospital","state")]
View(HA.ranked)
HA.ranked  <- setNames(HA.ranked,results.colnames)
HA.ranked[num,c("hospital","state")]
results.colnames <- c("hospital","state")
HA.ranked  <- setNames(HA.ranked,results.colnames)
HA.ranked[num,c("hospital","state")]
results.i <- HA.ranked[num,c("hospital","state")]
View(results.i)
View(HA.ranked)
View(results.i)
results[,i] <- HA.ranked[num,c("hospital","state")]
results <- as.data.frame[results]
results[] <- NULL
results <- as.data.frame[results]
results[] <- as.data.frame[results]
results <- data.frame(results)
results <- data.frame("")
View(results)
results[,i] <- HA.ranked[num,c("hospital","state")]
View(results.i)
results$i <- HA.ranked[num,c("hospital","state")]
View(results.i)
View(results)
results <- rbind(results,HA.ranked[num,c("hospital","state")]
)
rm results
rm(results)
rm(results.i)
results <- data.frame()
results <- rbind(results,HA.ranked[num,c("hospital","state")])
View(results)
i <- "AK"
num<-10
select.str <- paste0("select V2,V7 from outcome where V7=='",i,"' order by V11,V2")
HA.ranked <- sqldf(select.str)
## Set column names
HA.ranked  <- setNames(HA.ranked,results.colnames)
results <- rbind(results,HA.ranked[num,c("hospital","state")])
View(results)
print(results)
print(results,row.names = FALSE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
rankall("heart attack",10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
rankall("heart attack",10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
rankall("heart attack",10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
rankall("heart attack",10)
length(HA.ranked)
HA.ranked.columns
HA.ranked.cols
HA.ranked.colnum
HA.ranked.count
count(HA.ranked)
nrow(HA.ranked)
if (nrow(HA.ranked)>0) {print "greater thank 0"}
if (nrow(HA.ranked)>0) {print("greater thank 0")}
results <- rbind(results,c("",i))
View(results)
results <- rbind(results,c("NA",i))
results <- rbind(results,c("<NA>",i))
print(results,row.names = FALSE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
rankall("heart attack",10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
rankall("heart attack",10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
rankall("heart attack",10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
rankall("heart attack",10)
HA.ranked <- sqldf(select.str)
debugSource('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
HA.ranked <- sqldf(select.str)
rankall("heart attack",10)
length(HA.ranked)
View(HA.ranked)
View(HA.ranked)
View(HA.ranked)
View(results)
View(results)
rankall("heart attack",5)
if (nrow(HA.ranked)!=0) {
)
rankall("heart attack",5)
## Read outcome data
outcome <- read.csv("outcome-of-care-measures.csv",colClasses = "character",skip=1,header=FALSE)
## Column definitions of importance
states.col              <- 7
hospitals.col           <- 2
HA.col                  <- 11
HF.col                  <- 17
PN.col                  <- 23
states.contents         <- outcome[,states.col]
hospitals.contents      <- outcome[,hospitals.col]
HA.contents             <- as.numeric(outcome[,HA.col])
HF.contents             <- as.numeric(outcome[,HF.col])
PN.contents             <- as.numeric(outcome[,PN.col])
## Check that state and outcome are valid
valid_states <- unique(outcome[,7])
valid_outcomes <- c("heart attack","heart failure","pneumonia")
## Check for valid states
##        notvalidST=FALSE
notvalidOUTCOME=FALSE
##        for (i in valid_states) {
##                if (i == state) {
##                        notvalidST=TRUE
##                }
##        }
## Disable Warning
options(warn=-1)
## Check for valid Outcome
for (j in valid_outcomes) {
if (j == oc) {
notvalidOUTCOME = TRUE
}
}
if (!notvalidOUTCOME) {
stop("invalid outcome",call.=TRUE)
}
## Check for valid Outcome
for (j in valid_outcomes) {
if (j == oc) {
notvalidOUTCOME = TRUE
}
}
results.colnames <- c("hospital","state")
results <- data.frame()
i <- "DC"
num<-10
select.str <- paste0("select V2,V7 from outcome where V7=='",i,"' order by V11,V2")
HA.ranked <- sqldf(select.str)
View(HA.ranked)
nrows(HA.ranked)
nrow(HA.ranked)
if (nrow(HA.ranked)>num) {
HA.ranked  <- setNames(HA.ranked,results.colnames)
results <- rbind(results,HA.ranked[num,c("hospital","state")])
} else {
results <- rbind(results,c("<NA>",i))
}
View(results)
HA.ranked <- sqldf(select.str)
HA.ranked  <- setNames(HA.ranked,results.colnames)
## Set column names
if (nrow(HA.ranked)>num) {
results <- rbind(results,HA.ranked[num,c("hospital","state")])
} else {
results <- rbind(results,c("<NA>",i))
}
View(results)
results <- rbind(results,c(hospital="<NA>",state=i))
View(results)
results <- rbind(results,c("hospital"="<NA>","state"=i))
View(results)
results <- rbind(results,c("<NA>",i))
results.colnames <- c("hospital","state")
View(results)
View(results)
results <- data.frame()
HA.ranked  <- setNames(HA.ranked,results.colnames)
results <- rbind(results,HA.ranked[num,c("hospital","state")])
View(results)
results <- data.frame()
results <- setNames(results,results.colnames)
results <- data.frame(x=0,y=2)
results <- setNames(results,results.colnames)
View(results)
results <- data.frame(null,null)
results <- setNames(results,results.colnames)
results <- data.frame(0,0)
results <- setNames(results,results.colnames)
View(results)
results <- results[-1,]
View(results)
i <- "DC"
num<-10
select.str <- paste0("select V2,V7 from outcome where V7=='",i,"' order by V11,V2")
HA.ranked <- sqldf(select.str)
HA.ranked  <- setNames(HA.ranked,results.colnames)
## Set column names
if (nrow(HA.ranked)>num) {
results <- rbind(results,HA.ranked[num,c("hospital","state")])
} else {
results <- rbind(results,c("<NA>",i))
}
View(results)
results.colnames <- c("hospital","state")
results <- data.frame(0,0)
results <- setNames(results,results.colnames)
results <- results[-1,]
i <- "DC"
num<-10
select.str <- paste0("select V2,V7 from outcome where V7=='",i,"' order by V11,V2")
HA.ranked <- sqldf(select.str)
HA.ranked  <- setNames(HA.ranked,results.colnames)
## Set column names
if (nrow(HA.ranked)>num) {
results <- rbind(results,HA.ranked[num,c("hospital","state")])
} else {
results <- rbind(results,data.frame("<NA>",i))
}
View(results)
results.colnames <- c("hospital","state")
results <- data.frame(0,0)
results <- setNames(results,results.colnames)
i <- "DC"
num<-10
select.str <- paste0("select V2,V7 from outcome where V7=='",i,"' order by V11,V2")
HA.ranked <- sqldf(select.str)
HA.ranked  <- setNames(HA.ranked,results.colnames)
## Set column names
if (nrow(HA.ranked)>num) {
results <- rbind(results,HA.ranked[num,c("hospital","state")])
} else {
results <- rbind(results,data.frame("<NA>",i))
}
results <- rbind(results,data.frame("hospital"="<NA>","state"=i))
View(results)
results <- results[-1,]
View(results)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
rankall("heart attack",10)
head(rankall("heart attack",20),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
source(rankall.R)
getwd()
setwd("C:/downloads/Coursera/R-Programming/R_Prog_Assignment3")
source("rankall.R")
head(rankall("heart attack",20),10)
sqldf()
head(rankall("heart attack",20),10)
source("rankall.R")
head(rankall("heart attack",20),10)
sqldf()
head(rankall("heart attack",20),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
head(rankall("heart attack",20),10)
sqldf()
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
results <- data.frame(0,0,row.names = FALSE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
results <- data.frame(0,0,row.names = FALSE)
head(rankall("heart attack",20),10)
results <- rc[row.names=FALSE]
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
##results <- rc[row.names=FALSE]
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
results <- data.frame(0,0,row.names = NULL)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
unname(results)
unname(outcome
)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
View(results)
results<- unname(results[],force=TRUE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
results<- unname(results[],force=TRUE)
head(rankall("heart attack",20),10)
View(results)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
View(results)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
debugSource('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
View(results1)
View(results2)
View(results)
View(results)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),10)
head(rankall("heart attack","worst"),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack","worst"),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack","worst"),10)
debugSource('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack","worst"),10)
View(results)
View(HA.ranked)
head(rankall("heart attack","worst"),10)
nrow(HA.ranked)
HA.ranked[num,c("hospital","state")]
View(results)
debugSource('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack","worst"),10
)
head(rankall("heart attack",2),10)
head(rankall("heart attack",1),10)
head(rankall("heart attack",3),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",3),10)
head(rankall("heart attack","worst"),10
)
head(rankall("heart attack",5),10)
head(rankall("heart attack",10),10)
head(rankall("heart attack",15),10)
head(rankall("heart attack",19),10)
head(rankall("heart attack",18),10)
head(rankall("heart attack",17),10)
head(rankall("heart attack","worst"),10)
head(rankall("heart attack","best"),10)
head(rankall("heart attack",2),10)
tail(rankall("pneumonia","worst"),3)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("pneumonia","worst"),3)
View(outcome)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("pneumonia","worst"),3)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
View(outcome)
tail(rankall("heart failure"),10)
tail(rankall("heart attack",20),20)
tail(rankall("heart attack",20),20)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart attack",20),20)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart attack",20),20)
sqldf()
sqldf(
sqldf()
sqldf(
sqldf()
sqldf(
sqldf()
sqldf()
sqldf()
sqldf()
sqldf()
sqldf()
sqldf()
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart attack",20),20)
head(rankall("heart attack",20),20)
head(rankall("heart attack",20),20)
head(rankall("heart attack",20),20)
sqldf()
head(rankall("heart attack",20),20)
head(rankall("heart attack",20),20)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack",20),20)
head(rankall("heart attack",20),20)
sqldf()
head(rankall("heart attack",20),20)
head(rankall("heart attack",20),20)
head(rankall("heart attack",20),10)
head(rankall("heart failure",20),10)
tail(rankall("heart failure"),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart failure"),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart failure"),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart failure"),10)
select.str     <- paste0("select V2,V7 from outcome where V7=='",i,"' order by V23")
i="TN"
select.str     <- paste0("select V2,V7 from outcome where V7=='",i,"' order by V23")
HA.ranked <- sqldf(select.str)
View(HA.ranked)
select.str     <- paste0("select V2,V7 from outcome where V7=='",i,"' order by V17,V2")
HA.ranked <- sqldf(select.str)
View(HA.ranked)
select.str     <- paste0("select V2,V7,V17 from outcome where V7=='",i,"' order by V17,V2")
HA.ranked <- sqldf(select.str)
View(HA.ranked)
select.str     <- paste0("select V2,V7,V17 from outcome where V7=='",i,"' and V17 IS NOT 'NA' order by V17,V2")
HA.ranked <- sqldf(select.str)
View(HA.ranked)
select.str     <- paste0("select V2,V7,V17 from outcome where V7=='",i,"' and V17 IS NOT \"NA\" order by V17,V2")
HA.ranked <- sqldf(select.str)
View(HA.ranked)
select.str     <- paste0("select V2,V7,V17 from outcome where V7=='",i,"' order by V17,V2")
noNA <- is.na(HA.ranked[,V17])
noNA <- is.na(HA.ranked)
View(noNA)
good <-complete.cases(HD.ranked)
good <-complete.cases(HA.ranked)
good
View(outcome)
select.str     <- paste0("select V2,V7,V17 from outcome where V7=='",i,"' and V17 IS NOT 'Not Available' order by V17,V2")
HA.ranked <- sqldf(select.str)
View(HA.ranked
)
select.str     <- paste0("select V2,V7,V17 from outcome where V17 IS NOT 'Not Available' and V7=='",i,"' order by V17,V2")
HA.ranked <- sqldf(select.str)
View(HA.ranked)
outcome$V11             <- as.numeric(outcome[,HA.col])
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart failure"),10)
tail(rankall("heart failure"),10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart failure"),10)
View(HA.ranked)
View(HA.ranked)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart failure"),10)
debugSource('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart failure"),10)
View(work)
debugSource('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
debugSource('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart failure"),10)
tail(rankall("heart failure"),10)
debugSource('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart failure"),10)
View(HA.ranked)
View(work)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
tail(rankall("heart failure"),10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
source('C:/downloads/Coursera/R-Programming/R_Prog_Assignment3/rankall.R', echo=TRUE)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
exit
